using System.Collections;
using UnityEngine;

namespace NutriQuest.Character.Effects
{
    public class InvulnerabilityFrames : Effect
    {
        private float _invulnerabilityDuration;
        private GameObject _character;
        private float _timeBetweenBLink = 0.1f;

        public delegate Coroutine CoroutineRunner(IEnumerator coroutine);

        private CoroutineRunner _coroutineRunner;

        public InvulnerabilityFrames(float duration, GameObject character, CoroutineRunner coroutineRunner)
        {
            _invulnerabilityDuration = duration;
            _character = character.GetComponentInChildren<Animator>().gameObject;       //we get the root object of the model, where the animator is, to nos scale down the collider
            _coroutineRunner = coroutineRunner;
        }

        public override void Apply()
        {
          
            _coroutineRunner(Blink());
        }

        private IEnumerator Blink()
        {
            float time = 0f;

            Renderer renderer = _character.GetComponentInChildren<Renderer>();
            Color color = renderer.material.color;
            

            while (time <= _invulnerabilityDuration)
            {
                color = renderer.material.color;
                Debug.Log($"Change color : {color}");
                time += Time.deltaTime + _timeBetweenBLink;
                renderer.material.color = (color.r == 1 && color.g == 0 && color.b == 0)?Color.white:Color.red;
                yield return new WaitForSeconds(_timeBetweenBLink);
            }
            renderer.material.color = Color.white;
        }
    }
}
